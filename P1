#01. BFS

#include <stdio.h>
#include <time.h>

void bfs(int a[10][10], int n, int source)
{
    int visited[10], q[10], f = 0, r = -1, t, v;
    
    for (v = 0; v < n; v++)
    {
        visited[v] = 0;
    }
    
    q[++r] = source;
    visited[source] = 1;
    printf("The BFS traversal is:\n %d", source);
    
    while (f <= r)
    {
        t = q[f++];
        
        for (v = 0; v < n; v++)
        {
            if (a[t][v] == 1 && visited[v] == 0)
            {
                q[++r] = v;
                printf(" %d", v);
                visited[v] = 1;
            }
        }
    }
    printf("\n");
}

int main()
{
    int a[10][10], n, i, j, s;
    double clk;
    clock_t starttime, endtime;
    
    printf("\nEnter the number of cities: ");
    scanf("%d", &n);
    
    printf("\nEnter the matrix representation:\n");
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            scanf("%d", &a[i][j]);
        }
    }
    
    printf("\nEnter the source city: ");
    scanf("%d", &s);
    
    starttime = clock(); 
    bfs(a, n, s);
    endtime = clock();
    
    clk = (double)(endtime - starttime) / CLOCKS_PER_SEC;
    printf("\nThe run time is %f seconds\n", clk);
    
    return 0;
}
